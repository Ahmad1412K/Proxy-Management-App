{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safra\\\\Desktop\\\\Proxidize Task\\\\proxy-management-app\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [proxies, setProxies] = useState([]);\n  useEffect(() => {\n    const fetchProxies = async () => {\n      const response = await axios.get('http://localhost:5000/proxies', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setProxies(response.data);\n    };\n    fetchProxies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Proxies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: proxies.map(proxy => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [proxy.ip_address, \":\", proxy.port, \" - Status: \", proxy.status]\n      }, proxy.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"ucFdwyNo2eKhTnCulgNfFFT2Tgk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","proxies","setProxies","fetchProxies","response","get","headers","Authorization","localStorage","getItem","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","proxy","ip_address","port","status","id","_c","$RefreshReg$"],"sources":["C:/Users/safra/Desktop/Proxidize Task/proxy-management-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Dashboard() {\r\n    const [proxies, setProxies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProxies = async () => {\r\n            const response = await axios.get('http://localhost:5000/proxies', {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n            });\r\n            setProxies(response.data);\r\n        };\r\n        fetchProxies();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>My Proxies</h2>\r\n            <ul>\r\n                {proxies.map(proxy => (\r\n                    <li key={proxy.id}>{proxy.ip_address}:{proxy.port} - Status: {proxy.status}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,+BAA+B,EAAE;QAC9DC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAAE;MACxE,CAAC,CAAC;MACFP,UAAU,CAACE,QAAQ,CAACM,IAAI,CAAC;IAC7B,CAAC;IACDP,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAAa,QAAA,EACKV,OAAO,CAACe,GAAG,CAACC,KAAK,iBACdnB,OAAA;QAAAa,QAAA,GAAoBM,KAAK,CAACC,UAAU,EAAC,GAAC,EAACD,KAAK,CAACE,IAAI,EAAC,aAAW,EAACF,KAAK,CAACG,MAAM;MAAA,GAAjEH,KAAK,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8D,CAClF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACf,EAAA,CAvBQD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAyBlB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}