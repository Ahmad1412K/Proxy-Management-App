{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safra\\\\Desktop\\\\Proxidize Task\\\\proxy-management-app\\\\src\\\\Signup.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nfunction Signup() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('User registered successfully');\n      navigate('/login'); // Redirect to Login page on successful registration\n    } catch (error) {\n      alert('Failed to register user');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Signup\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Register\")));\n}\nexport default Signup;","map":{"version":3,"names":["React","useState","axios","useNavigate","Signup","username","setUsername","password","setPassword","navigate","handleSubmit","event","preventDefault","post","alert","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target"],"sources":["C:/Users/safra/Desktop/Proxidize Task/proxy-management-app/src/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Signup() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();  \r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:5000/register', { username, password });\r\n            alert('User registered successfully');\r\n            navigate('/login');  // Redirect to Login page on successful registration\r\n        } catch (error) {\r\n            alert('Failed to register user');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Signup</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Username:\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                </label>\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,SAASC,MAAMA,CAAA,EAAG;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMQ,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACA,MAAMV,KAAK,CAACW,IAAI,CAAC,gCAAgC,EAAE;QAAER,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC1EO,KAAK,CAAC,8BAA8B,CAAC;MACrCL,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;IACzB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZD,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACId,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACItB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,QAAU,CAAC,eACftB,KAAA,CAAAgB,aAAA;IAAMO,QAAQ,EAAEb,YAAa;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBtB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,WAEH,eAAAtB,KAAA,CAAAgB,aAAA;IAAOQ,IAAI,EAAC,MAAM;IAACC,KAAK,EAAEpB,QAAS;IAACqB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChF,CAAC,eACRtB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,WAEH,eAAAtB,KAAA,CAAAgB,aAAA;IAAOQ,IAAI,EAAC,UAAU;IAACC,KAAK,EAAElB,QAAS;IAACmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACpF,CAAC,eACRtB,KAAA,CAAAgB,aAAA;IAAQQ,IAAI,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CACpC,CACL,CAAC;AAEd;AAEA,eAAelB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}