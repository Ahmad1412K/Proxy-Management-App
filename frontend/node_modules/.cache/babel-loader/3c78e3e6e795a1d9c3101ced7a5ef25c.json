{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safra\\\\Desktop\\\\Proxidize Task\\\\proxy-management-app\\\\src\\\\Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nfunction Dashboard() {\n  const [proxies, setProxies] = useState([]);\n  useEffect(() => {\n    const fetchProxies = async () => {\n      const response = await axios.get('http://localhost:5000/pro', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setProxies(response.data);\n    };\n    fetchProxies();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"My Proxies\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, proxies.map(proxy => /*#__PURE__*/React.createElement(\"li\", {\n    key: proxy.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, proxy.ip_address, \":\", proxy.port, \" - Status: \", proxy.status))));\n}\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Dashboard","proxies","setProxies","fetchProxies","response","get","headers","Authorization","localStorage","getItem","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","proxy","key","id","ip_address","port","status"],"sources":["C:/Users/safra/Desktop/Proxidize Task/proxy-management-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Dashboard() {\r\n    const [proxies, setProxies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProxies = async () => {\r\n            const response = await axios.get('http://localhost:5000/pro', {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n            });\r\n            setProxies(response.data);\r\n        };\r\n        fetchProxies();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>My Proxies</h2>\r\n            <ul>\r\n                {proxies.map(proxy => (\r\n                    <li key={proxy.id}>{proxy.ip_address}:{proxy.port} - Status: {proxy.status}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,SAASA,CAAA,EAAG;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,2BAA2B,EAAE;QAC1DC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAAE;MACxE,CAAC,CAAC;MACFP,UAAU,CAACE,QAAQ,CAACM,IAAI,CAAC;IAC7B,CAAC;IACDP,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,KAAA,CAAAe,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIrB,KAAA,CAAAe,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAc,CAAC,eACnBrB,KAAA,CAAAe,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKhB,OAAO,CAACiB,GAAG,CAACC,KAAK,iBACdvB,KAAA,CAAAe,aAAA;IAAIS,GAAG,EAAED,KAAK,CAACE,EAAG;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,KAAK,CAACG,UAAU,EAAC,GAAC,EAACH,KAAK,CAACI,IAAI,EAAC,aAAW,EAACJ,KAAK,CAACK,MAAW,CAClF,CACD,CACH,CAAC;AAEd;AAEA,eAAexB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}